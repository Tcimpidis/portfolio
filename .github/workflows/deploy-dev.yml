name: Deploy to dev

on: 
  push: 
    branches:
      - development
      - put_app_in_container

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      # 
    steps:
      - name: Setup git
        run: |
          apt-get update; apt-get install -y git
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@master
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install pip
        run: |
          apt-get update; apt-get install -y python3-pip
      - name: Build and ENV
        run: |
          cd api
          cp .env_example_docker .env
          pip3 install -r requirements.txt
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./
          push: true
          build-args: |
            NEXT_PUBLIC_NODE_ENV=development
            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Deploy package to Server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.SERVER_ADMIN }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: GITHUB_USERNAME, GITHUB_TOKEN
          script: |
            docker login ${{ env.REGISTRY }} -u $GITHUB_USERNAME -p $GITHUB_TOKEN
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker stop ${{ env.IMAGE_NAME }}
            docker system prune -f
            docker run --name ${{ env.IMAGE_NAME }} -dit -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest